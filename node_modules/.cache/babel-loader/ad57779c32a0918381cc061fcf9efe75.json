{"ast":null,"code":"const WIDGET_URL = \"http://localhost:8080/api/widgets\";\nconst TOPIC_URL = \"http://localhost:8080/api/topics\";\nexport const findAllWidgets = () => fetch(WIDGET_URL).then(response => response.json());\nexport const createWidget = () => fetch(WIDGET_URL, {\n  method: \"POST\",\n  body: JSON.stringify({\n    type: \"HEADING\",\n    size: 2,\n    text: \"New Widget\"\n  }),\n  headers: {\n    'content-type': 'application/json'\n  }\n}).then(response => response.json());\nexport const createWidgetForTopic = (topicId, widget) => {\n  fetch(`${TOPIC_URL}/${topicId}/widgets`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      widget\n    }),\n    headers: {\n      \"content-type\": 'application/json'\n    }\n  }).then(response => response.json());\n};\nexport const findWidgetsForTopic = topicId => fetch(`${TOPIC_URL}/${topicId}/widgets`).then(response => response.json());\nexport const deleteWidget = widgetId => fetch(`${WIDGET_URL}/${widgetId}`, {\n  method: 'DELETE'\n}).then(response => response.json());\nexport const updateWidget = (widgetId, updatedWidget) => {\n  fetch(`${WIDGET_URL}/${widgetId}`, {\n    method: \"PUT\",\n    body: JSON.stringify(updatedWidget),\n    headers: {\n      'content-type': 'application/json'\n    }\n  }).then(response => response.json());\n};\nconst widgetApi = {\n  createWidget,\n  findWidgetsForTopic,\n  deleteWidget,\n  updateWidget,\n  findAllWidgets\n};\nexport default widgetApi;","map":{"version":3,"sources":["/Users/mattrubertone/Documents/Northeastern/wbdv-sp21-Matt-Rubertone-client-react/wbdv-sp21-matt-rubertone-client-react/src/services/widget-service.js"],"names":["WIDGET_URL","TOPIC_URL","findAllWidgets","fetch","then","response","json","createWidget","method","body","JSON","stringify","type","size","text","headers","createWidgetForTopic","topicId","widget","findWidgetsForTopic","deleteWidget","widgetId","updateWidget","updatedWidget","widgetApi"],"mappings":"AAAA,MAAMA,UAAU,GAAG,mCAAnB;AACA,MAAMC,SAAS,GAAG,kCAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAC1BC,KAAK,CAACH,UAAD,CAAL,CACKI,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,CADG;AAIP,OAAO,MAAMC,YAAY,GAAG,MACxBJ,KAAK,CAACH,UAAD,EAAa;AACdQ,EAAAA,MAAM,EAAE,MADM;AAEdC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,IAAI,EAAE,CAAxB;AAA2BC,IAAAA,IAAI,EAAE;AAAjC,GAAf,CAFQ;AAGdC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAHK,CAAb,CAAL,CAOKX,IAPL,CAOUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPtB,CADG;AAUP,OAAO,MAAMU,oBAAoB,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrDf,EAAAA,KAAK,CAAE,GAAEF,SAAU,IAAGgB,OAAQ,UAAzB,EAAoC;AACrCT,IAAAA,MAAM,EAAE,MAD6B;AAErCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACO,MAAAA;AAAD,KAAf,CAF+B;AAGrCH,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAH4B,GAApC,CAAL,CAMGX,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB;AAOH,CARM;AAUP,OAAO,MAAMa,mBAAmB,GAAIF,OAAD,IAC/Bd,KAAK,CAAE,GAAEF,SAAU,IAAGgB,OAAQ,UAAzB,CAAL,CACKb,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,CADG;AAIP,OAAO,MAAMc,YAAY,GAAIC,QAAD,IACxBlB,KAAK,CAAE,GAAEH,UAAW,IAAGqB,QAAS,EAA3B,EAA8B;AAC/Bb,EAAAA,MAAM,EAAE;AADuB,CAA9B,CAAL,CAGKJ,IAHL,CAGUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHtB,CADG;AAMP,OAAO,MAAMgB,YAAY,GAAG,CAACD,QAAD,EAAWE,aAAX,KAA6B;AACrDpB,EAAAA,KAAK,CAAE,GAAEH,UAAW,IAAGqB,QAAS,EAA3B,EAA8B;AAC/Bb,IAAAA,MAAM,EAAE,KADuB;AAE/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeY,aAAf,CAFyB;AAG/BR,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAHsB,GAA9B,CAAL,CAIGX,IAJH,CAIQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJpB;AAKH,CANM;AAQP,MAAMkB,SAAS,GAAG;AACdjB,EAAAA,YADc;AACAY,EAAAA,mBADA;AACqBC,EAAAA,YADrB;AACmCE,EAAAA,YADnC;AACiDpB,EAAAA;AADjD,CAAlB;AAIA,eAAesB,SAAf","sourcesContent":["const WIDGET_URL = \"http://localhost:8080/api/widgets\"\nconst TOPIC_URL = \"http://localhost:8080/api/topics\"\n\nexport const findAllWidgets = () =>\n    fetch(WIDGET_URL)\n        .then(response => response.json());\n\nexport const createWidget = () =>\n    fetch(WIDGET_URL, {\n        method: \"POST\",\n        body: JSON.stringify({type: \"HEADING\", size: 2, text: \"New Widget\"}),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json());\n\nexport const createWidgetForTopic = (topicId, widget) => {\n    fetch(`${TOPIC_URL}/${topicId}/widgets`, {\n        method: \"POST\",\n        body: JSON.stringify({widget}),\n        headers: {\n            \"content-type\": 'application/json'\n        }\n    }).then(response => response.json());\n}\n\nexport const findWidgetsForTopic = (topicId) =>\n    fetch(`${TOPIC_URL}/${topicId}/widgets`)\n        .then(response => response.json());\n\nexport const deleteWidget = (widgetId) =>\n    fetch(`${WIDGET_URL}/${widgetId}`, {\n        method: 'DELETE'\n    })\n        .then(response => response.json());\n\nexport const updateWidget = (widgetId, updatedWidget) => {\n    fetch(`${WIDGET_URL}/${widgetId}`, {\n        method: \"PUT\",\n        body: JSON.stringify(updatedWidget),\n        headers: { 'content-type': 'application/json' }\n    }).then(response => response.json());\n}\n\nconst widgetApi = {\n    createWidget, findWidgetsForTopic, deleteWidget, updateWidget, findAllWidgets\n}\n\nexport default widgetApi;"]},"metadata":{},"sourceType":"module"}