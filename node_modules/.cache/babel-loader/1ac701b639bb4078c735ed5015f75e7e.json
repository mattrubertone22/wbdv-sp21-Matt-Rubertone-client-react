{"ast":null,"code":"import widgetService from \"../services/widget-service\";\nexport const CREATE_WIDGET = \"CREATE_WIDGET\";\nexport const UPDATE_WIDGET = \"UPDATE_WIDGET\";\nexport const DELETE_WIDGET = \"DELETE_WIDGET\";\nexport const FIND_WIDGETS_FOR_COURSE = \"FIND_WIDGETS_FOR_COURSE\";\nexport const createWidget = (dispatch, widget) => {\n  widgetService.createWidget(widget._id, widget).then(widget => dispatch({\n    type: CREATE_WIDGET,\n    widget: widget\n  }));\n};\nexport const updateWidget = (dispatch, newItem) => {\n  widgetService.updateWidget(newItem._id, newItem).then(status => dispatch({\n    type: UPDATE_WIDGET,\n    updateWidget: newItem\n  }));\n};\nexport const deleteWidget = (dispatch, widgetToDelete) => {\n  widgetService.deleteWidget(widgetToDelete._id).then(status => dispatch({\n    type: DELETE_WIDGET,\n    widgetToDelete: widgetToDelete\n  }));\n};\nexport const findWidgetsForTopic = (dispatch, topicId) => {\n  widgetService.findWidgetsForTopic(topicId).then(widgets => dispatch({\n    type: FIND_WIDGETS_FOR_COURSE,\n    widgets: widgets\n  }));\n};\nconst widgetActions = {\n  createWidget,\n  findWidgetsForTopic,\n  updateWidget,\n  deleteWidget\n};\nexport default widgetActions;","map":{"version":3,"sources":["/Users/mattrubertone/Documents/Northeastern/wbdv-sp21-Matt-Rubertone-client-react/src/actions/widget-actions.js"],"names":["widgetService","CREATE_WIDGET","UPDATE_WIDGET","DELETE_WIDGET","FIND_WIDGETS_FOR_COURSE","createWidget","dispatch","widget","_id","then","type","updateWidget","newItem","status","deleteWidget","widgetToDelete","findWidgetsForTopic","topicId","widgets","widgetActions"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,4BAA1B;AAEA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AAEP,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAC9CP,EAAAA,aAAa,CAACK,YAAd,CAA2BE,MAAM,CAACC,GAAlC,EAAuCD,MAAvC,EACKE,IADL,CACUF,MAAM,IAAID,QAAQ,CAAC;AAACI,IAAAA,IAAI,EAAET,aAAP;AAAsBM,IAAAA,MAAM,EAAEA;AAA9B,GAAD,CAD5B;AAEH,CAHM;AAKP,OAAO,MAAMI,YAAY,GAAG,CAACL,QAAD,EAAWM,OAAX,KAAuB;AAC/CZ,EAAAA,aAAa,CAACW,YAAd,CAA2BC,OAAO,CAACJ,GAAnC,EAAwCI,OAAxC,EACKH,IADL,CACUI,MAAM,IAAIP,QAAQ,CAAC;AAACI,IAAAA,IAAI,EAAER,aAAP;AAAsBS,IAAAA,YAAY,EAAEC;AAApC,GAAD,CAD5B;AAEH,CAHM;AAKP,OAAO,MAAME,YAAY,GAAG,CAACR,QAAD,EAAWS,cAAX,KAA8B;AACtDf,EAAAA,aAAa,CAACc,YAAd,CAA2BC,cAAc,CAACP,GAA1C,EACKC,IADL,CACUI,MAAM,IAAIP,QAAQ,CAAC;AAACI,IAAAA,IAAI,EAAEP,aAAP;AAAsBY,IAAAA,cAAc,EAAEA;AAAtC,GAAD,CAD5B;AAEH,CAHM;AAKP,OAAO,MAAMC,mBAAmB,GAAG,CAACV,QAAD,EAAWW,OAAX,KAAuB;AACtDjB,EAAAA,aAAa,CAACgB,mBAAd,CAAkCC,OAAlC,EACKR,IADL,CACUS,OAAO,IAAIZ,QAAQ,CAAC;AACtBI,IAAAA,IAAI,EAAEN,uBADgB;AAEtBc,IAAAA,OAAO,EAAEA;AAFa,GAAD,CAD7B;AAKH,CANM;AAQP,MAAMC,aAAa,GAAG;AAClBd,EAAAA,YADkB;AACJW,EAAAA,mBADI;AACiBL,EAAAA,YADjB;AAC+BG,EAAAA;AAD/B,CAAtB;AAIA,eAAeK,aAAf","sourcesContent":["import widgetService from \"../services/widget-service\";\n\nexport const CREATE_WIDGET = \"CREATE_WIDGET\"\nexport const UPDATE_WIDGET = \"UPDATE_WIDGET\"\nexport const DELETE_WIDGET = \"DELETE_WIDGET\"\nexport const FIND_WIDGETS_FOR_COURSE = \"FIND_WIDGETS_FOR_COURSE\"\n\nexport const createWidget = (dispatch, widget) => {\n    widgetService.createWidget(widget._id, widget)\n        .then(widget => dispatch({type: CREATE_WIDGET, widget: widget}))\n}\n\nexport const updateWidget = (dispatch, newItem) => {\n    widgetService.updateWidget(newItem._id, newItem)\n        .then(status => dispatch({type: UPDATE_WIDGET, updateWidget: newItem}))\n}\n\nexport const deleteWidget = (dispatch, widgetToDelete) => {\n    widgetService.deleteWidget(widgetToDelete._id)\n        .then(status => dispatch({type: DELETE_WIDGET, widgetToDelete: widgetToDelete}))\n}\n\nexport const findWidgetsForTopic = (dispatch, topicId) => {\n    widgetService.findWidgetsForTopic(topicId)\n        .then(widgets => dispatch({\n            type: FIND_WIDGETS_FOR_COURSE,\n            widgets: widgets\n        }))\n}\n\nconst widgetActions = {\n    createWidget, findWidgetsForTopic, updateWidget, deleteWidget\n}\n\nexport default widgetActions"]},"metadata":{},"sourceType":"module"}