{"ast":null,"code":"var _jsxFileName = \"/Users/mattrubertone/Documents/Northeastern/wbdv-sp21-Matt-Rubertone-client-react/wbdv-sp21-matt-rubertone-client-react/src/components/course-editor/widgets/widget-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport HeadingWidget from \"./heading-widget\";\nimport ParagraphWidget from \"./paragraph-widget\";\nimport { useParams } from \"react-router-dom\";\nimport widgetApi from \"../../../services/widget-service\";\nimport widgetActions from \"../../../actions/widget-actions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WidgetList = () => {\n  _s();\n\n  const service = widgetApi;\n  const {\n    topicId\n  } = useParams();\n  const [widgets, setWidgets] = useState([]);\n  const [widget, setWidget] = useState({});\n  useEffect(() => {\n    service.findAllWidgets().then(widgets => setWidgets(widgets));\n  }, [topicId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      onClick: service.createWidget,\n      className: \"fas fa-plus float-right fa-2x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Widget List \", widget.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: widgets.map(_widget => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [_widget.id === widget.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => service.deleteWidget(_widget.id),\n            className: \"fas fa-trash float-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => {\n              service.updateWidget(_widget.id, widget);\n            },\n            className: \"fas fa-check float-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true), _widget.id !== widget.id && /*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: () => setWidget(_widget),\n          className: \"fas fa-cog float-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }, this), _widget.type === \"HEADING\" && /*#__PURE__*/_jsxDEV(HeadingWidget, {\n          setWidget: setWidget,\n          editing: _widget.id === widget.id,\n          widget: widget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 33\n        }, this), _widget.type === \"PARAGRAPH\" && /*#__PURE__*/_jsxDEV(ParagraphWidget, {\n          setWidget: setWidget,\n          editing: _widget.id === widget.id,\n          widget: _widget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }, this)]\n      }, _widget.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WidgetList, \"LRzY4fwBAG50k4rL3zSORcis4ug=\", false, function () {\n  return [useParams];\n});\n\n_c = WidgetList;\n\nconst stpm = state => ({\n  widgets: state.widgetReducer.widgets\n});\n\nconst dtpm = dispatch => ({\n  createWidget: widget => widgetActions.createWidget(dispatch, widget),\n  updateWidget: newItem => widgetActions.updateWidget(dispatch, newItem),\n  deleteWidget: widgetToDelete => widgetActions.deleteWidget(dispatch, widgetToDelete),\n  findWidgetsForTopic: topicId => widgetActions.findWidgetsForTopic(dispatch, topicId)\n});\n\nexport default connect(stpm, dtpm)(WidgetList);\n\nvar _c;\n\n$RefreshReg$(_c, \"WidgetList\");","map":{"version":3,"sources":["/Users/mattrubertone/Documents/Northeastern/wbdv-sp21-Matt-Rubertone-client-react/wbdv-sp21-matt-rubertone-client-react/src/components/course-editor/widgets/widget-list.js"],"names":["React","useState","useEffect","HeadingWidget","ParagraphWidget","useParams","widgetApi","widgetActions","connect","WidgetList","service","topicId","widgets","setWidgets","widget","setWidget","findAllWidgets","then","createWidget","id","map","_widget","deleteWidget","updateWidget","type","stpm","state","widgetReducer","dtpm","dispatch","newItem","widgetToDelete","findWidgetsForTopic"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport HeadingWidget from \"./heading-widget\";\nimport ParagraphWidget from \"./paragraph-widget\";\nimport {useParams} from \"react-router-dom\"\nimport widgetApi from \"../../../services/widget-service\";\nimport widgetActions from \"../../../actions/widget-actions\";\nimport {connect} from \"react-redux\";\n\nconst WidgetList = () => {\n    const service = widgetApi\n    const {topicId} = useParams()\n    const [widgets, setWidgets] = useState([])\n    const [widget, setWidget] = useState({})\n\n    useEffect(() => {\n        service.findAllWidgets()\n            .then(widgets => setWidgets(widgets))\n    }, [topicId])\n    \n    return(\n        <div>\n            <i onClick={service.createWidget} className=\"fas fa-plus float-right fa-2x\"/>\n            <h1>Widget List {widget.id}</h1>\n            <ul className=\"list-group\">\n                {\n                    widgets.map(_widget =>\n                        <li key={_widget.id} className=\"list-group-item\">\n                            {\n                                _widget.id === widget.id &&\n                                    <>\n                                        <i onClick={() => service.deleteWidget(_widget.id)}\n                                           className=\"fas fa-trash float-right\"/>\n                                        <i onClick={() => {service.updateWidget(_widget.id, widget)}}\n                                           className=\"fas fa-check float-right\"/>\n                                    </>\n                            }\n                            {\n                                _widget.id !== widget.id &&\n                                <i onClick={() => setWidget(_widget)} className=\"fas fa-cog float-right\"/>\n                            }\n                            {\n                                _widget.type === \"HEADING\" &&\n                                <HeadingWidget\n                                    setWidget={setWidget}\n                                    editing={_widget.id === widget.id}\n                                    widget={widget}/>\n                            }\n                            {\n                                _widget.type === \"PARAGRAPH\" &&\n                                <ParagraphWidget\n                                    setWidget={setWidget}\n                                    editing={_widget.id === widget.id}\n                                    widget={_widget}/>\n                            }\n                        </li>\n                    )\n                }\n            </ul>\n        </div>\n    )\n}\n\nconst stpm = (state) => ({\n    widgets: state.widgetReducer.widgets\n})\nconst dtpm = (dispatch) => ({\n    createWidget: (widget) => widgetActions.createWidget(dispatch, widget),\n    updateWidget: (newItem) => widgetActions.updateWidget(dispatch, newItem),\n    deleteWidget: (widgetToDelete) => widgetActions.deleteWidget(dispatch, widgetToDelete),\n    findWidgetsForTopic: (topicId) => widgetActions.findWidgetsForTopic(dispatch, topicId)\n})\n\nexport default connect(stpm, dtpm) (WidgetList)"]},"metadata":{},"sourceType":"module"}