{"ast":null,"code":"var _jsxFileName = \"/Users/mattrubertone/Documents/Northeastern/wbdv-sp21-Matt-Rubertone-client-react/wbdv-sp21-matt-rubertone-client-react/src/components/course-editor/widgets/widget-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport HeadingWidget from \"./heading-widget\";\nimport ParagraphWidget from \"./paragraph-widget\";\nimport { useParams } from \"react-router-dom\"; // import ListWidget from \"./list-widget\";\n// import ImageWidget from \"./image-widget\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WidgetList = () => {\n  _s();\n\n  const {\n    topicId\n  } = useParams(); // TODO: move all state handling to widgets-reducer.js\n\n  const [widgets, setWidgets] = useState([]);\n  const [widget, setWidget] = useState({});\n  useEffect(() => {\n    // TODO: move all server communication to widgets-service.js\n    fetch(`http://localhost:8080/api/topics/${topicId}/widgets`).then(response => response.json()).then(widgets => setWidgets(widgets));\n  }, [topicId]);\n\n  const createWidget = () => {\n    // TODO: move all server communication to widgets-service\n    fetch(`http://localhost:8080/api/topics/${topicId}/widgets`, {\n      method: 'POST',\n      body: JSON.stringify({\n        type: \"HEADING\",\n        size: 2,\n        text: \"New Widget\"\n      }),\n      headers: {\n        \"content-type\": 'application/json'\n      }\n    }).then(response => response.json()).then(widget => setWidgets(widgets => [...widgets, widget]));\n  };\n\n  const deleteWidget = id => // TODO: move all server communication to widgets-service.js\n  fetch(`http://localhost:8080/api/widgets/${id}`, {\n    method: \"DELETE\"\n  }).then(status => {\n    setWidgets(widgets => widgets.filter(w => w.id !== id));\n  });\n\n  const updateWidget = (id, widget) => // TODO: move all server communication to widgets-service.js\n  fetch(`http://localhost:8080/api/widgets/${id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(widget),\n    headers: {\n      \"content-type\": 'application/json'\n    }\n  }).then(status => {\n    setWidget({});\n    setWidgets(widgets => widgets.map(w => w.id === id ? widget : w));\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      onClick: createWidget,\n      className: \"fas fa-plus float-right fa-2x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Widget List \", widget.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: widgets.map(_widget => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [_widget.id, _widget.id === widget.id && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => deleteWidget(_widget.id),\n            className: \"fas fa-trash float-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => {\n              updateWidget(_widget.id, widget);\n            },\n            className: \"fas fa-check float-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true), _widget.id !== widget.id && /*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: () => setWidget(_widget),\n          className: \"fas fa-cog float-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }, this), _widget.type === \"HEADING\" && /*#__PURE__*/_jsxDEV(HeadingWidget, {\n          setWidget: setWidget,\n          editing: _widget.id === widget.id,\n          widget: widget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }, this), _widget.type === \"PARAGRAPH\" && /*#__PURE__*/_jsxDEV(ParagraphWidget, {\n          setWidget: setWidget,\n          editing: _widget.id === widget.id,\n          widget: _widget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }, this), _widget.type === \"LIST\" && /*#__PURE__*/_jsxDEV(ListWidget, {\n          setWidget: setWidget,\n          editing: _widget.id === widget.id,\n          widget: _widget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }, this), _widget.type === \"IMAGE\" && /*#__PURE__*/_jsxDEV(ImageWidget, {\n          setWidget: setWidget,\n          editing: _widget.id === widget.id,\n          widget: _widget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }, this)]\n      }, _widget.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WidgetList, \"LRzY4fwBAG50k4rL3zSORcis4ug=\", false, function () {\n  return [useParams];\n});\n\n_c = WidgetList;\nexport default WidgetList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WidgetList\");","map":{"version":3,"sources":["/Users/mattrubertone/Documents/Northeastern/wbdv-sp21-Matt-Rubertone-client-react/wbdv-sp21-matt-rubertone-client-react/src/components/course-editor/widgets/widget-list.js"],"names":["React","useState","useEffect","HeadingWidget","ParagraphWidget","useParams","WidgetList","topicId","widgets","setWidgets","widget","setWidget","fetch","then","response","json","createWidget","method","body","JSON","stringify","type","size","text","headers","deleteWidget","id","status","filter","w","updateWidget","map","_widget"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport HeadingWidget from \"./heading-widget\";\nimport ParagraphWidget from \"./paragraph-widget\";\nimport {useParams} from \"react-router-dom\"\n// import ListWidget from \"./list-widget\";\n// import ImageWidget from \"./image-widget\";\n\nconst WidgetList = () => {\n    const {topicId} = useParams()\n    // TODO: move all state handling to widgets-reducer.js\n    const [widgets, setWidgets] = useState([])\n    const [widget, setWidget] = useState({})\n    useEffect(() => {\n        // TODO: move all server communication to widgets-service.js\n        fetch(`http://localhost:8080/api/topics/${topicId}/widgets`)\n            .then(response => response.json())\n            .then(widgets => setWidgets(widgets))\n    }, [topicId])\n\n    const createWidget = () => {\n        // TODO: move all server communication to widgets-service\n        fetch(`http://localhost:8080/api/topics/${topicId}/widgets`, {\n            method: 'POST',\n            body: JSON.stringify({type: \"HEADING\", size: 2, text: \"New Widget\"}),\n            headers: {\n                \"content-type\": 'application/json'\n            }\n        })\n            .then(response => response.json())\n            .then(widget => setWidgets((widgets) => [...widgets, widget]))\n    }\n\n    const deleteWidget = (id) =>\n        // TODO: move all server communication to widgets-service.js\n        fetch(`http://localhost:8080/api/widgets/${id}`, {\n            method: \"DELETE\"\n        }).then((status) => {\n            setWidgets((widgets) => widgets.filter(w => w.id !== id))\n        })\n\n    const updateWidget = (id, widget) =>\n        // TODO: move all server communication to widgets-service.js\n        fetch(`http://localhost:8080/api/widgets/${id}`, {\n            method: \"PUT\",\n            body: JSON.stringify(widget),\n            headers: {\n                \"content-type\": 'application/json'\n            }\n        }).then((status) => {\n            setWidget({})\n            setWidgets((widgets) => widgets.map(w => w.id === id ? widget : w))\n        })\n\n    return(\n        <div>\n            <i onClick={createWidget} className=\"fas fa-plus float-right fa-2x\"></i>\n            <h1>Widget List {widget.id}</h1>\n            <ul className=\"list-group\">\n                {\n                    widgets.map(_widget =>\n                        <li key={_widget.id} className=\"list-group-item\">\n                            {_widget.id}\n                            {\n                                _widget.id === widget.id &&\n                                <>\n                                    <i onClick={() => deleteWidget(_widget.id)} className=\"fas fa-trash float-right\"></i>\n                                    <i onClick={() => {\n                                        updateWidget(_widget.id, widget)\n                                    }} className=\"fas fa-check float-right\"></i>\n                                </>\n                            }\n                            {\n                                _widget.id !== widget.id &&\n                                <i onClick={() => setWidget(_widget)} className=\"fas fa-cog float-right\"></i>\n                            }\n                            {\n                                _widget.type === \"HEADING\" &&\n                                <HeadingWidget\n                                    setWidget={setWidget}\n                                    editing={_widget.id === widget.id}\n                                    widget={widget}/>\n                            }\n                            {\n                                _widget.type === \"PARAGRAPH\" &&\n                                <ParagraphWidget\n                                    setWidget={setWidget}\n                                    editing={_widget.id === widget.id}\n                                    widget={_widget}/>\n                            }\n                            {\n                                _widget.type === \"LIST\" &&\n                                <ListWidget\n                                    setWidget={setWidget}\n                                    editing={_widget.id === widget.id}\n                                    widget={_widget}/>\n                            }\n                            {\n                                _widget.type === \"IMAGE\" &&\n                                <ImageWidget\n                                    setWidget={setWidget}\n                                    editing={_widget.id === widget.id}\n                                    widget={_widget}/>\n                            }\n                        </li>\n                    )\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default WidgetList"]},"metadata":{},"sourceType":"module"}